project(vtkSlicer${MODULE_NAME}ModuleMRML)

set(KIT ${PROJECT_NAME})

set(${KIT}_EXPORT_DIRECTIVE "VTK_SLICER_${MODULE_NAME_UPPER}_MODULE_MRML_EXPORT")

set(${KIT}_INCLUDE_DIRECTORIES
  ${Slicer_Base_INCLUDE_DIRS}
  ${cisst_msgs_INCLUDE_DIRS} 
  ${turtlesim_INCLUDE_DIRS} 
  ${std_srvs_INCLUDE_DIRS} 
  )

# include SlicerROS2 for code generation functions
include(SlicerROS2.cmake)

generate_ros2_nodes(
  GENERATED_FILES "SRCS_GENERATED"
  PUBLISHERS
  "geometry_msgs/msg/PoseStamped"
  "geometry_msgs/msg/TransformStamped"
  "geometry_msgs/msg/WrenchStamped"
  "sensor_msgs/msg/Joy"
  "sensor_msgs/msg/JointState"
  SUBSCRIBERS
  "geometry_msgs/msg/PoseStamped"
  "geometry_msgs/msg/TransformStamped"
  "geometry_msgs/msg/WrenchStamped"
  "sensor_msgs/msg/Joy"
  "sensor_msgs/msg/JointState"
  DEPENDENCIES
  "std_msgs/msg/Header"
  "builtin_interfaces/msg/Time"
  )

#   SERVICES "std_srvs/srv/Empty"

# set(_AUTOGENERATED_NODES
#     PUBLISHERS "geometry_msgs/msg/PoseStamped"
#     SUBSCRIBERS "geometry_msgs/msg/WrenchStamped"
#     PUBLISHERS "sensor_msgs/msg/JointState"
#     SUBSCRIBERS "sensor_msgs/msg/Joy"
#     DEPENDENCIES "std_msgs/msg/Header"
#     DEPENDENCIES "builtin_interfaces/msg/Time"
# )

# message_extractor(${_AUTOGENERATED_NODES}) ## This will return _ROS_MESSAGES, all the unique messages used 

# foreach(_msg ${_ROS_MESSAGES})
#     generate_ros2_message(${_msg})
# endforeach()

# list(LENGTH _AUTOGENERATED_NODES length)
# math(EXPR length "${length} - 1")

# foreach(index RANGE 0 ${length} 2)
#   list(GET _AUTOGENERATED_NODES ${index} type)
#   math(EXPR next_index "${index} + 1")
#   list(GET _AUTOGENERATED_NODES ${next_index} msg_type)

#   if(type STREQUAL "PUBLISHERS")
#     generate_publisher_node(${msg_type})
#   elseif(type STREQUAL "SUBSCRIBERS")
#     generate_subscriber_node(${msg_type})
#   elseif(type STREQUAL "SERVICES")
#     generate_service_node(${msg_type})
#   else()
#     message("Unknown type: ${type}")
#   endif()
# endforeach()


set(_SRCS_INTERNAL
  # conversion methods
  # vtkROS2ToSlicer.h
  vtkROS2ToSlicer.cxx
  # vtkSlicerToROS2.h
  vtkSlicerToROS2.cxx
  # vtkMRMLROS2Utils.h
  vtkMRMLROS2Utils.cxx
  )

set(${KIT}_SRCS
  # private classes
  ${_SRCS_INTERNAL}
  # generated classes
  ${SRCS_GENERATED}
  # public classes
  vtkMRMLROS2NodeNode.h
  vtkMRMLROS2NodeNode.cxx
  vtkMRMLROS2SubscriberNode.h
  vtkMRMLROS2SubscriberNode.cxx
  vtkMRMLROS2SubscriberDefaultNodes.h
  vtkMRMLROS2SubscriberDefaultNodes.cxx
  vtkMRMLROS2PublisherNode.h
  vtkMRMLROS2PublisherNode.cxx
  vtkMRMLROS2PublisherDefaultNodes.h
  vtkMRMLROS2PublisherDefaultNodes.cxx
  vtkMRMLROS2ParameterNode.h
  vtkMRMLROS2ParameterNode.cxx
  vtkMRMLROS2Tf2BroadcasterNode.h
  vtkMRMLROS2Tf2BroadcasterNode.cxx
  vtkMRMLROS2Tf2LookupNode.h
  vtkMRMLROS2Tf2LookupNode.cxx
  vtkMRMLROS2RobotNode.h
  vtkMRMLROS2RobotNode.cxx
  vtkMRMLROS2ServiceNode.h
  vtkMRMLROS2ServiceNode.cxx
  vtkMRMLROS2ServiceClientNode.h
  vtkMRMLROS2ServiceClientNode.cxx
  vtkMRMLROS2ServiceClientDefaultNodes.h
  vtkMRMLROS2ServiceClientDefaultNodes.cxx
  vtkCustomTypes.h
  vtkCustomTypes.cxx
  )

if (USE_CISST_MSGS)
  set (${KIT}_SRCS
    ${${KIT}_SRCS}
    vtkMRMLROS2CISST.h
    vtkMRMLROS2CISST.cxx)
endif ()

set (${KIT}_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR} CACHE INTERNAL "" FORCE)

# --------------------------------------------------------------------------
# Build the library

set(${KIT}_TARGET_LIBRARIES
  ${MRML_LIBRARIES}
  SlicerBaseLogic
  )

SlicerMacroBuildModuleMRML(
  NAME ${KIT}
  EXPORT_DIRECTIVE ${${KIT}_EXPORT_DIRECTIVE}
  INCLUDE_DIRECTORIES ${${KIT}_INCLUDE_DIRECTORIES}
  SRCS ${${KIT}_SRCS}
  TARGET_LIBRARIES ${${KIT}_TARGET_LIBRARIES} ${rclcpp_LIBRARIES} ${sensor_msgs_LIBRARIES} ${tf2_ros_LIBRARIES} ${tf2_msgs_LIBRARIES} ${tf2_LIBRARIES} ${urdf_LIBRARIES} ${cisst_msgs_LIBRARIES} ${turtlesim_LIBRARIES} ${std_srvs_LIBRARIES} 
  )
